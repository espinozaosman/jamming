{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","e","this","setState","target","value","onSearch","className","placeholder","onChange","onClick","React","Component","Track","renderAction","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","playlistName","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","searchTerm","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","catch","error","console","log","savePlaylist","tracksUri","userId","method","body","JSON","stringify","playlistId","uris","App","updatePlaylistName","some","playlistTrack","push","newPlaylistTracks","filter","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a0d211d.chunk.js","sourcesContent":["const clientId = \"eaa5f78cd11d480f9826e12b4b12a330\";\nconst redirectURI = \"https://espinozaosman.github.io/jamming/\";\nlet accessToken;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\"); // This clears the parameters, allowing us to grab a new access token when it expires.\n\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(searchTerm) {\n    let spotifyTracks = fetch(\n      `https://api.spotify.com/v1/search?type=track&q=${searchTerm}`,\n      {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      }\n    )\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (!jsonResponse) {\n          return [{}];\n        }\n\n        let tracks = jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n\n        return tracks;\n      })\n      .catch((error) => {\n        console.log(\"Spotify search error\");\n      });\n\n    return spotifyTracks;\n  },\n\n  async savePlaylist(playlistName, tracksUri) {\n    if (!(playlistName && tracksUri)) return;\n\n    // Get spotify user Id\n    let userId = await fetch(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => jsonResponse.id)\n      .catch((error) => {\n        console.log(\"User id Fetch error\");\n      });\n\n    // Create playlist\n    let playlistId = await fetch(\n      `https://api.spotify.com/v1/users/${userId}/playlists`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: playlistName,\n        }),\n        json: true,\n      }\n    )\n      .then((response) => response.json())\n      .then((jsonResponse) => jsonResponse.id)\n      .catch((error) => {\n        console.log(\"Create Playlist error\");\n      });\n\n    await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        uris: tracksUri,\n      }),\n    })\n      .then((response) => {\n        console.log(\"Songs added to playlist\");\n      })\n      .catch((error) => {\n        console.log(\"Fetch error while adding songs to the playlist\");\n      });\n  },\n};\n\nexport default Spotify;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: \"\" };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  handleTermChange(e) {\n    this.setState({ term: e.target.value });\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\" onClick={this.search}>\n          SEARCH\n        </button>\n      </div>\n    );\n  }\n}\nexport default SearchBar;","import React from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderAction = this.renderAction.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return (\n        <button className=\"Track-action\" onClick={this.removeTrack}>\n          {\" \"}\n          -{\" \"}\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"Track-action\" onClick={this.addTrack}>\n          {\" \"}\n          +{\" \"}\n        </button>\n      );\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {/* <button className=\"Track-action\">{this.renderAction()}</button> */}\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\n\nexport default Track;\n","import React from 'react';\nimport './TrackList.css';\nimport Track from '../Track/Track';\n\nclass TrackList extends React.Component {\n    render() {\n        return (\n            <div className=\"TrackList\">\n                {this.props.tracks.map((track) => {\n                    return (\n                        <Track key={track.id} track={track} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval}/>\n                    )\n                })}\n            </div>\n        );\n    }\n\n}\n\nexport default TrackList;","import React from \"react\";\nimport \"./SearchResults.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.searchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport \"./Playlist.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleNameChange(e) {\n    this.props.onNameChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input\n          value={this.props.playlistName || \"New Playlist\"}\n          onChange={this.handleNameChange}\n        />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [],\n\n      playlistName: \"\",\n\n      playlistTracks: [],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (\n      !this.state.playlistTracks.some(\n        (playlistTrack) => playlistTrack.id === track.id\n      )\n    ) {\n      this.state.playlistTracks.push(track);\n      this.setState({ playlistTracks: this.state.playlistTracks });\n    }\n  }\n\n  removeTrack(track) {\n    let newPlaylistTracks = this.state.playlistTracks.filter(\n      (playlistTrack) => playlistTrack.id !== track.id\n    );\n    this.setState({ playlistTracks: newPlaylistTracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    console.log(\"in save playlist app.js\");\n    let tracksUri = this.state.playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, tracksUri).then(() => {\n      this.setState({ \n        playlistName: 'New Playlist',\n        playlistTrack: []\n       })\n    })\n  }\n\n  async search(term) {\n    console.log(`You are searching for the song ${term}`);\n    Spotify.getAccessToken();\n    let searchResults = await Spotify.search(term);\n    this.setState({ searchResults: searchResults });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}